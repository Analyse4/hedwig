# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
  branches:
    include:
      - master
variables:
  TAG: 0.0.1-alpha.15

stages:
  - stage: Build
    jobs:
      - job: build
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Docker@2
            displayName: Login to Docker Hub
            inputs:
              command: login
              containerRegistry: DockerHub
          - task: Docker@2
            displayName: Build and Push
            inputs:
              command: buildAndPush
              repository: analyse4/hedwig
              tags: $(TAG)
  - stage: Deploy
    jobs:
      - job: deploy
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          # SSH
          # Run shell commands or a script on a remote machine using SSH
          - task: SSH@0
            inputs:
              sshEndpoint: alibabacloud-ecs-1
              runOptions: 'inline' # Options: commands, script, inline
              #commands: mkdir -p /root/test/test # Required when runOptions == Commands
              #scriptPath: # Required when runOptions == Script
              inline: |
                # stop container
                CONTAINER_ID=$(docker ps -qf name=hedwig)
                if [[ ! -z $CONTAINER_ID ]]; then
                  docker stop $CONTAINER_ID
                  docker rm $CONTAINER_ID
                fi
                # delete old images
                if [[ ! -z $(docker images -q --filter=reference='analyse4/hedwig*') ]]; then
                  docker rmi $(docker images -q --filter=reference='analyse4/hedwig*')
                fi
                # pull new image
                docker pull analyse4/hedwig:$(TAG)
                if [[ -z  "$(docker images -q analyse4/hedwig:$(TAG))" ]]; then
                  exit 1
                fi
                # run new container
                docker run -p 2245:2245 -d --name hedwig analyse4/hedwig:$(TAG)
              #args: # Optional
              #failOnStdErr: true # Optional

